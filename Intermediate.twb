<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sample-CoffeeChain CSV.csv (Sample-CoffeeChain)' inline='true' name='federated.1hpy9tk0gauk2216oe2r116fxxyj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample-CoffeeChain' name='excel-direct.02e1mcq0wgm4ex1gatu351j4v84l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/snehchitalia/Downloads/Sample-CoffeeChain.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.02e1mcq0wgm4ex1gatu351j4v84l' name='Sample-CoffeeChain CSV.csv' table='[&apos;Sample-CoffeeChain CSV#csv$&apos;]' type='table'>
          <columns gridOrigin='A1:W4249:no:A1:W4249:0' header='yes' outcome='6'>
            <column datatype='integer' name='Area Code (Location)' ordinal='0' />
            <column datatype='integer' name='Area Code' ordinal='1' />
            <column datatype='integer' name='Budget COGS' ordinal='2' />
            <column datatype='integer' name='Budget Margin' ordinal='3' />
            <column datatype='integer' name='Budget Profit' ordinal='4' />
            <column datatype='integer' name='Budget Sales' ordinal='5' />
            <column datatype='integer' name='Cogs' ordinal='6' />
            <column datatype='date' name='Date' ordinal='7' />
            <column datatype='integer' name='Inventory' ordinal='8' />
            <column datatype='integer' name='Margin' ordinal='9' />
            <column datatype='string' name='Market Size' ordinal='10' />
            <column datatype='string' name='Market' ordinal='11' />
            <column datatype='integer' name='Marketing' ordinal='12' />
            <column datatype='integer' name='Number of Records' ordinal='13' />
            <column datatype='integer' name='Product Id' ordinal='14' />
            <column datatype='string' name='Product Type' ordinal='15' />
            <column datatype='integer' name='ProductId (Product)' ordinal='16' />
            <column datatype='string' name='Product' ordinal='17' />
            <column datatype='integer' name='Profit' ordinal='18' />
            <column datatype='integer' name='Sales' ordinal='19' />
            <column datatype='string' name='State' ordinal='20' />
            <column datatype='integer' name='Total Expenses' ordinal='21' />
            <column datatype='string' name='Type' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area Code (Location)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area Code (Location)]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Area Code (Location)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area Code]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Area Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cogs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cogs]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Cogs</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Product Id]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Product Id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductId (Product)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProductId (Product)]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>ProductId (Product)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sample-CoffeeChain CSV.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W4249:no:A1:W4249:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='integer' default-format='*000' name='[Area Code (Location)]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column aggregation='None' datatype='integer' default-format='*000' name='[Area Code]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='integer' name='[Product Id]' role='dimension' type='ordinal' />
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.494647' measure-ordering='alphabetic' measure-percentage='0.505353' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Orders+ (Sample-Superstore)' inline='true' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample-Superstore' name='excel-direct.01jf5bo0q23b4b1d3kn5e0lj6yic'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='/Users/snehchitalia/Downloads/Sample-Superstore.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.01jf5bo0q23b4b1d3kn5e0lj6yic' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9998:no:A1:U9998:1' header='yes' lost='2' outcome='9' processed='79952'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.01jf5bo0q23b4b1d3kn5e0lj6yic' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:D297:no:A1:D297:1' lost='0' outcome='1' processed='296'>
              <column datatype='integer' name='Number of Records' ordinal='0' />
              <column datatype='string' name='Returned' ordinal='1' />
              <column datatype='string' name='Order ID' ordinal='2' />
              <column datatype='string' name='Updated Order Returns' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Number of Records]' value='[Returns].[Number of Records]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
          <map key='[Updated Order Returns]' value='[Returns].[Updated Order Returns]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9998:no:A1:U9998:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>2</attribute>
              <attribute datatype='integer' name='outcome'>9</attribute>
              <attribute datatype='integer' name='processed'>79952</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Updated Order Returns</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Updated Order Returns]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Updated Order Returns</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D297:no:A1:D297:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>296</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SalesRevenue' datatype='real' name='[Calculation_5091952697605120000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])/COUNTD([Order ID])' />
      </column>
      <column caption='NameOfMeasure' datatype='real' name='[Calculation_5091952697609383937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;Discount&quot; THEN [Discount]&#10;WHEN &quot;Profit&quot; THEN [Profit]&#10;WHEN &quot;Quantity&quot; THEN [Quantity]&#10;WHEN &quot;Sales&quot; THEN [Sales]&#10;END' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='None' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[ReturnedOrNot]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Returned]' new-bin='true'>
          <bin default-name='false' value='&quot;Not Returned&quot;'>
            <value>%null%</value>
          </bin>
          <bin default-name='false' value='&quot;Returned&quot;'>
            <value>&quot;Yes&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (ReturnedOrNot,YEAR(Order Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ReturnedOrNot]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='ProfitAbove10k' name='[ProfitAbove10k]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Profit]) &gt;= 10000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='SalesAbove40k' name='[SalesAbove40k]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Sales]) &gt;= 40000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='StatesForExpansionConsideration' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[SalesAbove40k]' function='reference' />
          <groupfilter field='[ProfitAbove10k]' function='reference' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.486683' group-percentage='0.152542' measure-ordering='alphabetic' measure-percentage='0.305085' parameter-percentage='0.0556901' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[ReturnedOrNot]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Not Returned&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Returned&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='MeasureValue' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
          <calculation class='tableau' formula='&quot;Quantity&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='MeasureValue' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
        <calculation class='tableau' formula='&quot;Quantity&quot;' />
        <members>
          <member value='&quot;Discount&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Quantity&quot;' />
          <member value='&quot;Sales&quot;' />
        </members>
      </column>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='MeasureValue' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
              <calculation class='tableau' formula='&quot;Quantity&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column caption='NameOfMeasure' datatype='real' name='[Calculation_5091952697609383937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;Discount&quot; THEN [Discount]&#10;WHEN &quot;Profit&quot; THEN [Profit]&#10;WHEN &quot;Quantity&quot; THEN [Quantity]&#10;WHEN &quot;Sales&quot; THEN [Sales]&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5091952697609383937]' derivation='Sum' name='[sum:Calculation_5091952697609383937:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Calculation_5091952697609383937:qk]</rows>
        <cols>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{010300D4-E847-42C9-8F2C-D90396C86715}' />
    </worksheet>
    <worksheet name='Return Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
            <column datatype='integer' name='[Row ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Row ID]' derivation='Count' name='[cnt:Row ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Number of Records:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[cnt:Row ID:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Number of Records:qk]' z-order='2' />
            <reference-line axis-column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[cnt:Row ID:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Number of Records:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Sub-Category:nk]</rows>
        <cols>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[cnt:Row ID:qk]</cols>
      </table>
      <simple-id uuid='{B655644B-912F-4C5A-A244-A94861B5B178}' />
    </worksheet>
    <worksheet name='Return analysis of sub category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column datatype='string' name='[ReturnedOrNot]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Returned]' new-bin='true'>
                <bin default-name='false' value='&quot;Not Returned&quot;'>
                  <value>%null%</value>
                </bin>
                <bin default-name='false' value='&quot;Returned&quot;'>
                  <value>&quot;Yes&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]' />
              <text column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[pcto:sum:Sales:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Sub-Category:nk]</rows>
        <cols>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{8FD252D1-4546-40A3-A7EC-91844D084A49}' />
    </worksheet>
    <worksheet name='States for expansion'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Country:nk]' />
              <lod column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:State:nk]' />
              <geometry column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0tlj4f71iv7ase1cjymv11akhy2i].[io:Set 1:nk] * [federated.0tlj4f71iv7ase1cjymv11akhy2i].[Latitude (generated)])</rows>
        <cols>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C07E3BF8-DED8-46F3-B9FE-0EA95A36EAEB}' />
    </worksheet>
    <worksheet name='Superstore and coffee chain sales comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample-CoffeeChain CSV.csv (Sample-CoffeeChain)' name='federated.1hpy9tk0gauk2216oe2r116fxxyj' />
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1hpy9tk0gauk2216oe2r116fxxyj'>
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1hpy9tk0gauk2216oe2r116fxxyj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1hpy9tk0gauk2216oe2r116fxxyj].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1hpy9tk0gauk2216oe2r116fxxyj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1hpy9tk0gauk2216oe2r116fxxyj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hpy9tk0gauk2216oe2r116fxxyj].[none:State:nk]</rows>
        <cols>([federated.1hpy9tk0gauk2216oe2r116fxxyj].[sum:Sales:qk] + [federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{0C0EE0AD-23AB-458C-B341-0D3B4379C2AF}' />
    </worksheet>
    <worksheet name='Table Calculation'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='MeasureValue' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
              <calculation class='tableau' formula='&quot;Quantity&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column caption='SalesRevenue' datatype='real' name='[Calculation_5091952697605120000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales])/COUNTD([Order ID])' />
            </column>
            <column caption='NameOfMeasure' datatype='real' name='[Calculation_5091952697609383937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;Discount&quot; THEN [Discount]&#10;WHEN &quot;Profit&quot; THEN [Profit]&#10;WHEN &quot;Quantity&quot; THEN [Quantity]&#10;WHEN &quot;Sales&quot; THEN [Sales]&#10;END' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Row ID]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5091952697609383937]' derivation='Sum' name='[sum:Calculation_5091952697609383937:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Row ID]' derivation='Sum' name='[sum:Row ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5091952697605120000]' derivation='User' name='[usr:Calculation_5091952697605120000:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{9624F31F-D817-4CA6-AB71-8686BB579E87}' />
    </worksheet>
    <worksheet name='Total loss from returns'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[ReturnedOrNot]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Returned]' new-bin='true'>
                <bin default-name='false' value='&quot;Not Returned&quot;'>
                  <value>%null%</value>
                </bin>
                <bin default-name='false' value='&quot;Returned&quot;'>
                  <value>&quot;Yes&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]'>
            <groupfilter function='member' level='[ReturnedOrNot]' member='&quot;Returned&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]' value='217' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='69' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' />
              <wedge-size column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' />
              <size column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' />
              <text column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' />
              <text column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]</rows>
        <cols />
      </table>
      <simple-id uuid='{A90B441C-99B5-4052-9100-9315022BE6A5}' />
    </worksheet>
    <worksheet name='Total sales from each category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' />
              <wedge-size column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' />
              <size column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' />
              <text column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' />
              <text column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{17AD3B89-3723-43BF-9ECE-8F5A8D29CF55}' />
    </worksheet>
    <worksheet name='Trend of return'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ReturnedOrNot]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Returned]' new-bin='true'>
                <bin default-name='false' value='&quot;Not Returned&quot;'>
                  <value>%null%</value>
                </bin>
                <bin default-name='false' value='&quot;Returned&quot;'>
                  <value>&quot;Yes&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[Exclusions (ReturnedOrNot,YEAR(Order Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[ReturnedOrNot]' />
                <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[ReturnedOrNot]' member='&quot;Not Returned&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2015' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[mn:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Order Date:ok]' member='1' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='2' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='3' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='4' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='5' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='6' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='7' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='8' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='9' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='10' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='11' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='12' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[Exclusions (ReturnedOrNot,YEAR(Order Date))]</column>
            <column>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[mn:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]</rows>
        <cols>([federated.0tlj4f71iv7ase1cjymv11akhy2i].[yr:Order Date:ok] / ([federated.0tlj4f71iv7ase1cjymv11akhy2i].[qr:Order Date:ok] / [federated.0tlj4f71iv7ase1cjymv11akhy2i].[mn:Order Date:ok]))</cols>
      </table>
      <simple-id uuid='{79EB6604-05F7-4435-8A62-C4654794F6F8}' />
    </worksheet>
    <worksheet name='sales of remaining/retained orders'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample-Superstore)' name='federated.0tlj4f71iv7ase1cjymv11akhy2i' />
          </datasources>
          <datasource-dependencies datasource='federated.0tlj4f71iv7ase1cjymv11akhy2i'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[ReturnedOrNot]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Returned]' new-bin='true'>
                <bin default-name='false' value='&quot;Not Returned&quot;'>
                  <value>%null%</value>
                </bin>
                <bin default-name='false' value='&quot;Returned&quot;'>
                  <value>&quot;Yes&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]'>
            <groupfilter function='member' level='[ReturnedOrNot]' member='&quot;Not Returned&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]' value='211' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='13' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' />
              <wedge-size column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' />
              <size column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' />
              <text column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' />
              <text column='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]</rows>
        <cols />
      </table>
      <simple-id uuid='{16ADD9CA-867F-4519-BE0F-E67B6236252B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Return analysis of sub category' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Trend of return' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Total sales from each category' w='23100' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='Total loss from returns' w='30300' x='23900' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='14' name='sales of remaining/retained orders' w='29000' x='54200' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8250' id='8' name='Return analysis of sub category' pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10750' id='11' name='Total sales from each category' pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' type='color' w='16000' x='83200' y='9250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5750' id='12' name='Total sales from each category' pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' type='size' w='16000' x='83200' y='20000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='19' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Return analysis of sub category' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='8' name='Return analysis of sub category' pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Trend of return' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Total sales from each category' w='23100' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='11' name='Total sales from each category' pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' type='color' w='16000' x='83200' y='9250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='12' name='Total sales from each category' pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' type='size' w='16000' x='83200' y='20000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='13' is-fixed='true' name='Total loss from returns' w='30300' x='23900' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='14' is-fixed='true' name='sales of remaining/retained orders' w='29000' x='54200' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F766C22D-AF1C-4B90-94B2-16F67EBD0726}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Return Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[cnt:Row ID:qk]</field>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61594B3D-A3C6-4E74-B540-AC1654D00ED2}' />
    </window>
    <window class='worksheet' name='Superstore and coffee chain sales comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1hpy9tk0gauk2216oe2r116fxxyj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:State:nk]</field>
            <field>[federated.1hpy9tk0gauk2216oe2r116fxxyj].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B049591F-D7AD-44A0-961C-D0B518078E86}' />
    </window>
    <window class='worksheet' name='Return analysis of sub category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]</field>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B5BBEC8-E6C8-4465-8E0A-AEE399A6313C}' />
    </window>
    <window class='worksheet' name='sales of remaining/retained orders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A59985C2-C8FF-422A-AED1-3FA0D2C15CD6}' />
    </window>
    <window class='worksheet' name='Total loss from returns'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06C82B18-2854-4F1D-9A84-AFD121AD224E}' />
    </window>
    <window class='worksheet' name='Total sales from each category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D28578CC-5097-478D-94A4-E07DE063013A}' />
    </window>
    <window class='worksheet' name='Trend of return'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]</field>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[mn:Order Date:ok]</field>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{294E9586-66A1-4EB3-A655-A0F0303D7C25}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Return analysis of sub category'>
          <highlight>
            <color-one-way>
              <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[ReturnedOrNot]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total loss from returns' />
        <viewpoint name='Total sales from each category'>
          <highlight>
            <color-one-way>
              <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Trend of return'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='sales of remaining/retained orders' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C1A67019-C301-4A7D-A522-A5F3E2CA1FD4}' />
    </window>
    <window class='worksheet' name='States for expansion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[io:Set 1:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E5701A6A-1A97-4715-BF5B-30E4A2A9D3BE}' />
    </window>
    <window class='worksheet' name='Table Calculation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0B563E4F-3356-48FB-8C08-DB8BB35F8363}' />
    </window>
    <window class='worksheet' maximized='true' name='Parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[none:Category:nk]</field>
            <field>[federated.0tlj4f71iv7ase1cjymv11akhy2i].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F263BB27-355D-475A-8C5B-2B7E86B439E3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      gOBqIgAEV/s3Cz4/80GUCVoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Return Analysis' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Return analysis of sub category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='States for expansion' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Superstore and coffee chain sales comparison' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Table Calculation' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='184' name='Total loss from returns' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAC4CAYAAAC1reOrAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYLElEQVR4nO3de1xU553H8c+BGZiBARl1JKKCiokYy9QoadQ1Vuqlmo0JpBuz6yV51aaG
      pBtvTU2rabLRJEY38bZpNanVpF7alSQacYNxvZP1itrgBbWCkSQQQRmEkRmYgbN/cBEEBGRg
      0PN7v16+lHPO85wH53znPOf2HEVVVRUhNMrH2w0QwpskAELTJABC0yQAQtMkAELTJABC0yQA
      QtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC0yQAQtMkAELT
      JABC0yQAQtMkAELTJABC0yQAQtMkAELTJABC03SNLZCamtoW7RDCKxQZHFdomXSBhKZJAISm
      SQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkA
      hKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISm
      SQCEpkkAhKZJAISmSQCEpkkAhKZJAO5Ibuw2G3aHu4X1OMjLzsbmaGCu3e6BdbRvEoB2xnF2
      I1ZFwWq1YrVaiY2NRVEU4ledBCAjZRWxip7xU6cz5SE9sbM+xlZPPSfXJqAo1hr1WFGUeA7Z
      K+a781KIVwKYNv9lOgYorDqUd6Ow7TizrAoPjZ/C+Ef0KPGLyWggJHc8VbRzRery6Gg18ZJL
      VYsOqjMnL1cvFN2Yu//1EerrB/MbryY3WY3mdTVXVVVVzVcXRaOuTKusqOigGkeceqyoYn0r
      R6AuP5hbXfTC1plq9NxdnvuV2pFGX5MqvMtxcj0zIl/FFa4DBrN03eBa80NCuoOr8XpSls1h
      ZPJ2LADZX5IcuYbPo00VM02Dmb/cRPIpGwMH6ym8Go010lJdNqxnL/ifUo/9Tu2JBKBdc/C3
      V59n5cLiej+orO3zsc7ozAWX+dbV2FN49a2RfKSGVfyYlQ5DRmGssUivYQ9y8stvYXA0L2x+
      kykjp5C/bBo9rp9mybwz/GHXCx77raqUFxZSevFrXDnZuL7Lxp2dQ9m1a6hOJ+UOB6rTyW+j
      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
      YII=
    </thumbnail>
    <thumbnail height='164' name='Total sales from each category' width='164'>
      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
      UuBUN8cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend of return' width='192'>
      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
      er1UVFSsO3758uWs++H1elFVdV2djIyMEAqFCIfD6LpOVVVV3joZGxtjeHgYv9+P1+vNsRGP
      xwkEAsRiMQKBwLpyKIqCZVmcO3eOxcVFKisrcbvd2TRisRjvvPNOaXuAZDJJMBikp6eH9vZ2
      FhcXc84ZHx/H5/Nx7NgxIpHIutYrGAwSjUZZXFwkEonktI6aplFVVYUsy5immTO1vsrc3ByZ
      TIajR4+uLLve0KKs3uSpqSkqKyvzpjE1NYWqqhw7doxEIrEun7Is093dTWNjI1VVVXR3d+dc
      L0kS3d3dOa3iWmpra/F6vQWPK4pCd3c3qVQqb6sI0Nq6smt9oeOpVIqZmRm6urro6enJG7CY
      mJjA7XZz/PhxotHourLOz8+zvLzMwsIC4XC4YJ0oioJpmgV7o1W7R44cyenVAKqqqlheXmZy
      cpKqqqqc63VdZ2Jigra2Nnp7e1lYWFh33O12s2/fvtKOAeLxOJ2dndTX1yOEyFsQIQSHDh1C
      kqSc4w0NDbhcLjweT3aQtJHa2lpkWaahoaGg3+p2u9F1nenpaQ4ePJgT2XG5XLjdburr63G7
      1y+ltm2bYDCIJElUVFSQTCbp6elZZ0uWZTKZDLZtMz8/TywWY//+/evSsSyLmZmZ7JqV5ubc
      l29mZmYIh8M0NDSwsLBAW1vbuuPJZDLrXhmGQV1dXU4a4+PjJJNJ/H5/ttfdmEZ7e3t2MOn3
      +3PSsCyrYJ3U1dWhqiqatvKBrnxiraurQwjB3r17C9aJx+NB13WCwSC9vb05x71eLw0NDevW
      TK2STqcJBoPZnsWyrJxGR9M0YrFYaXuAQCDAmTNn6OvrY3l5Oe/NiMfjnD17ltHR0ZxuUlEU
      QqEQtm2TyWQIhUI51yuKwuDgIOPj44TD4bz5mJ2dzd7QVCqVk4/5+Xmqq6s5fPhwzkMlSRKB
      QIDKykp8Pl+2q96Yht/vZ2pqis7OzmzkaGM6qy5hodZZ07TseCTfGqTVRWnhcLjgAHBV7JFI
      JG8It6KigvPnz9PX10coFMpbJ6lUinfffZcrV67krZNwOJztcfP16oqiMDIywujoKEtLS3nz
      OTMzw8GDB9F1Pe/9nJ6epre3l/379+c0SqqqUlVVlXWZN7pwaympADweD52dndfsCru7u1FV
      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
      fC4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='184' name='sales of remaining/retained orders' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
